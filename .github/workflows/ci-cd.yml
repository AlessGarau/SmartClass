name: ci/cd

on:
  push:
    branches: [main, DP-201-CI/CD]

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
          
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        
      - name: Build and push client image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Docker/Dockerfile.client.prod
          push: true
          tags: ${{ vars.DOCKERHUB_USERNAME }}/smart-class-client:latest
          
      - name: Build and push server image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Docker/Dockerfile.server.prod
          push: true
          tags: ${{ vars.DOCKERHUB_USERNAME }}/smart-class-server:latest

  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Copy docker-compose to VPS
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USERNAME }}
          password: ${{ secrets.VPS_PASSWORD }}
          port: 2323
          source: "Docker/docker-compose.prod.yml"
          target: "/home/${{ secrets.VPS_USERNAME }}/smart-class/"
          
      - name: Deploy to VPS
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USERNAME }}
          password: ${{ secrets.VPS_PASSWORD }}
          port: 2323
          script: |
            cd /home/${{ secrets.VPS_USERNAME }}/smart-class/Docker
            
            # Stop and remove existing containers
            docker-compose -f docker-compose.prod.yml down || true
            
            # Pull latest images
            docker pull ${{ vars.DOCKERHUB_USERNAME }}/smart-class-client:latest
            docker pull ${{ vars.DOCKERHUB_USERNAME }}/smart-class-server:latest
            
            # Start the application
            docker-compose -f docker-compose.prod.yml up -d
            
            # Clean up unused images
            docker image prune -f
